/*
 * Copyright (c) 2021-2023 HPMicro
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */


#ifndef HPM_OPAMP_H
#define HPM_OPAMP_H

typedef struct {
    __RW uint32_t CTRL0;                       /* 0x0: control reg */
} OPAMP_Type;


/* Bitfield definition for register: CTRL0 */
/*
 * EN_LV (RW)
 *
 */
#define OPAMP_CTRL0_EN_LV_MASK (0x4000000UL)
#define OPAMP_CTRL0_EN_LV_SHIFT (26U)
#define OPAMP_CTRL0_EN_LV_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_EN_LV_SHIFT) & OPAMP_CTRL0_EN_LV_MASK)
#define OPAMP_CTRL0_EN_LV_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_EN_LV_MASK) >> OPAMP_CTRL0_EN_LV_SHIFT)

/*
 * OPAOUT_SEL (RW)
 *
 */
#define OPAMP_CTRL0_OPAOUT_SEL_MASK (0x3000000UL)
#define OPAMP_CTRL0_OPAOUT_SEL_SHIFT (24U)
#define OPAMP_CTRL0_OPAOUT_SEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_OPAOUT_SEL_SHIFT) & OPAMP_CTRL0_OPAOUT_SEL_MASK)
#define OPAMP_CTRL0_OPAOUT_SEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_OPAOUT_SEL_MASK) >> OPAMP_CTRL0_OPAOUT_SEL_SHIFT)

/*
 * VSWITCH_SEL (RW)
 *
 */
#define OPAMP_CTRL0_VSWITCH_SEL_MASK (0xE00000UL)
#define OPAMP_CTRL0_VSWITCH_SEL_SHIFT (21U)
#define OPAMP_CTRL0_VSWITCH_SEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_VSWITCH_SEL_SHIFT) & OPAMP_CTRL0_VSWITCH_SEL_MASK)
#define OPAMP_CTRL0_VSWITCH_SEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_VSWITCH_SEL_MASK) >> OPAMP_CTRL0_VSWITCH_SEL_SHIFT)

/*
 * ISEL (RW)
 *
 */
#define OPAMP_CTRL0_ISEL_MASK (0x180000UL)
#define OPAMP_CTRL0_ISEL_SHIFT (19U)
#define OPAMP_CTRL0_ISEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_ISEL_SHIFT) & OPAMP_CTRL0_ISEL_MASK)
#define OPAMP_CTRL0_ISEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_ISEL_MASK) >> OPAMP_CTRL0_ISEL_SHIFT)

/*
 * VIM_SEL (RW)
 *
 */
#define OPAMP_CTRL0_VIM_SEL_MASK (0x70000UL)
#define OPAMP_CTRL0_VIM_SEL_SHIFT (16U)
#define OPAMP_CTRL0_VIM_SEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_VIM_SEL_SHIFT) & OPAMP_CTRL0_VIM_SEL_MASK)
#define OPAMP_CTRL0_VIM_SEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_VIM_SEL_MASK) >> OPAMP_CTRL0_VIM_SEL_SHIFT)

/*
 * GPA_SEL (RW)
 *
 */
#define OPAMP_CTRL0_GPA_SEL_MASK (0xFF00U)
#define OPAMP_CTRL0_GPA_SEL_SHIFT (8U)
#define OPAMP_CTRL0_GPA_SEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_GPA_SEL_SHIFT) & OPAMP_CTRL0_GPA_SEL_MASK)
#define OPAMP_CTRL0_GPA_SEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_GPA_SEL_MASK) >> OPAMP_CTRL0_GPA_SEL_SHIFT)

/*
 * CSEL (RW)
 *
 */
#define OPAMP_CTRL0_CSEL_MASK (0xF0U)
#define OPAMP_CTRL0_CSEL_SHIFT (4U)
#define OPAMP_CTRL0_CSEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_CSEL_SHIFT) & OPAMP_CTRL0_CSEL_MASK)
#define OPAMP_CTRL0_CSEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_CSEL_MASK) >> OPAMP_CTRL0_CSEL_SHIFT)

/*
 * VBYPASS (RW)
 *
 */
#define OPAMP_CTRL0_VBYPASS_MASK (0x8U)
#define OPAMP_CTRL0_VBYPASS_SHIFT (3U)
#define OPAMP_CTRL0_VBYPASS_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_VBYPASS_SHIFT) & OPAMP_CTRL0_VBYPASS_MASK)
#define OPAMP_CTRL0_VBYPASS_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_VBYPASS_MASK) >> OPAMP_CTRL0_VBYPASS_SHIFT)

/*
 * VIP_SEL (RW)
 *
 */
#define OPAMP_CTRL0_VIP_SEL_MASK (0x7U)
#define OPAMP_CTRL0_VIP_SEL_SHIFT (0U)
#define OPAMP_CTRL0_VIP_SEL_SET(x) (((uint32_t)(x) << OPAMP_CTRL0_VIP_SEL_SHIFT) & OPAMP_CTRL0_VIP_SEL_MASK)
#define OPAMP_CTRL0_VIP_SEL_GET(x) (((uint32_t)(x) & OPAMP_CTRL0_VIP_SEL_MASK) >> OPAMP_CTRL0_VIP_SEL_SHIFT)




#endif /* HPM_OPAMP_H */