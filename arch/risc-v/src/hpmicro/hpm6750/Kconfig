#
# For a description of the syntax of this configuration file,
# see the file kconfig-language.txt in the NuttX tools repository.
#

menu "HPM6750 Peripheral Support"

config HPM_FEMC
	bool "FEMC"
	select HPM_FEMC_DRV
	default n

config HPM_SDP
	bool "SDP"
	select HPM_SDP_DRV
	default y

config HPM_LCDC
	bool "LCDC"
	select HPM_LCDC_DRV
	default n

config HPM_UART0
	bool "UART0"
	select HPM_UART_DRV
	select ARCH_HAVE_UART0
	select UART0_SERIALDRIVER
	select ARCH_HAVE_SERIAL_TERMIOS
	default y

#####################################################################
#  I2C Configuration 
#####################################################################

config HPM_I2C_DRV
	bool 
	default n

#####################################################################
#  I2C0 Configuration 
#####################################################################
config HPM6750_I2C0
	bool "I2C0"
	select HPM_I2C_DRV
	select I2C
	default n

choice
	depends on HPM6750_I2C0
	prompt "I2C0 driver"
	default HPM6750_I2C0_MASTER

comment "******I2C Mode*********"
comment "0 means i2c_mode_normal"
comment "1 means i2c_mode_fast"
comment "2 means i2c_mode_fast_plus"
comment "***********************"

config HPM6750_I2C0_MASTER
	bool "I2C0_MASTER"
	select I2C_DRIVER

config HPM6750_I2C0_SLAVE
	bool "I2C0_SLAVE"
	select I2C_DRIVER
	select I2C_SLAVE

endchoice # I2C0 driver

config HPM6750_I2C0_MASTER_MODE
	depends on HPM6750_I2C0_MASTER
	int "I2C0_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C0_MASTER_10BIT_ADDR
	depends on HPM6750_I2C0_MASTER
	int "I2C0_MASTER_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C0_SLAVE_MODE
	depends on HPM6750_I2C0_SLAVE
	int "I2C0_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C0_SLAVE_10BIT_ADDR
	depends on HPM6750_I2C0_SLAVE
	int "I2C0_SLAVE_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C0_SLAVE_ADDR
	depends on HPM6750_I2C0_SLAVE
	int "I2C0_SLAVE_ADDRESS"
	range 1 1023
	default 16

#####################################################################
#  I2C1 Configuration 
#####################################################################
config HPM6750_I2C1
	bool "I2C1"
	select HPM_I2C_DRV
	select I2C
	default n

choice
	depends on HPM6750_I2C1
	prompt "I2C1 driver"
	default HPM6750_I2C1_MASTER

comment "******I2C Mode*********"
comment "0 means i2c_mode_normal"
comment "1 means i2c_mode_fast"
comment "2 means i2c_mode_fast_plus"
comment "***********************"

config HPM6750_I2C1_MASTER
	bool "I2C1_MASTER"
	select I2C_DRIVER

config HPM6750_I2C1_SLAVE
	bool "I2C1_SLAVE"
	select I2C_DRIVER
	select I2C_SLAVE

endchoice # I2C1 driver

config HPM6750_I2C1_MASTER_MODE
	depends on HPM6750_I2C1_MASTER
	int "I2C1_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C1_MASTER_10BIT_ADDR
	depends on HPM6750_I2C1_MASTER
	int "I2C1_MASTER_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C1_SLAVE_MODE
	depends on HPM6750_I2C1_SLAVE
	int "I2C1_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C1_SLAVE_10BIT_ADDR
	depends on HPM6750_I2C1_SLAVE
	int "I2C1_SLAVE_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C1_SLAVE_ADDR
	depends on HPM6750_I2C1_SLAVE
	int "I2C1_SLAVE_ADDRESS"
	range 1 1023
	default 16

#####################################################################
#  I2C2 Configuration 
#####################################################################
config HPM6750_I2C2
	bool "I2C2"
	select HPM_I2C_DRV
	select I2C
	default n

choice
	depends on HPM6750_I2C2
	prompt "I2C2 driver"
	default HPM6750_I2C2_MASTER

comment "******I2C Mode*********"
comment "0 means i2c_mode_normal"
comment "1 means i2c_mode_fast"
comment "2 means i2c_mode_fast_plus"
comment "***********************"

config HPM6750_I2C2_MASTER
	bool "I2C2_MASTER"
	select I2C_DRIVER

config HPM6750_I2C2_SLAVE
	bool "I2C2_SLAVE"
	select I2C_DRIVER
	select I2C_SLAVE

endchoice # I2C2 driver

config HPM6750_I2C2_MASTER_MODE
	depends on HPM6750_I2C2_MASTER
	int "I2C2_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C2_MASTER_10BIT_ADDR
	depends on HPM6750_I2C2_MASTER
	int "I2C2_MASTER_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C2_SLAVE_MODE
	depends on HPM6750_I2C2_SLAVE
	int "I2C2_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C2_SLAVE_10BIT_ADDR
	depends on HPM6750_I2C2_SLAVE
	int "I2C2_SLAVE_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C2_SLAVE_ADDR
	depends on HPM6750_I2C2_SLAVE
	int "I2C2_SLAVE_ADDRESS"
	range 1 1023
	default 16

#####################################################################
#  I2C3 Configuration 
#####################################################################
config HPM6750_I2C3
	bool "I2C3"
	select HPM_I2C_DRV
	select I2C
	default n

choice
	depends on HPM6750_I2C3
	prompt "I2C3 driver"
	default HPM6750_I2C3_MASTER

comment "******I2C Mode*********"
comment "0 means i2c_mode_normal"
comment "1 means i2c_mode_fast"
comment "2 means i2c_mode_fast_plus"
comment "***********************"

config HPM6750_I2C3_MASTER
	bool "I2C3_MASTER"
	select I2C_DRIVER

config HPM6750_I2C3_SLAVE
	bool "I2C3_SLAVE"
	select I2C_DRIVER
	select I2C_SLAVE

endchoice # I2C3 driver

config HPM6750_I2C3_MASTER_MODE
	depends on HPM6750_I2C3_MASTER
	int "I2C3_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C3_MASTER_10BIT_ADDR
	depends on HPM6750_I2C3_MASTER
	int "I2C3_MASTER_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C3_SLAVE_MODE
	depends on HPM6750_I2C3_SLAVE
	int "I2C3_MASTER_MODE"
	range 0 2
	default 0

config HPM6750_I2C3_SLAVE_10BIT_ADDR
	depends on HPM6750_I2C3_SLAVE
	int "I2C3_SLAVE_10BIT_ADDRESS"
	range 0 1
	default 0

config HPM6750_I2C3_SLAVE_ADDR
	depends on HPM6750_I2C3_SLAVE
	int "I2C3_SLAVE_ADDRESS"
	range 1 1023
	default 16

config HPM_DMA_DRV
	bool
	default n

config HPM_SPI_DRV
	bool
	default n

config HPM_COMPONENTS_DMA_MANAGER
	bool "DMA_MANAGER"
	default n

config HPM_COMPONENTS_SPI
	bool "COMPONENTS_SPI"
	default n

config HPM_DMA
	bool "DMA"
	select ARCH_DMA
	select HPM_DMA_DRV
	default n

config HPM6750_SPI0
	bool "SPI0"
	default n
	select HPM_SPI_DRV

config HPM6750_SPI0_DMA
	bool "SPI0_DMA"
	default n
	select ARCH_DMA
	select HPM_DMA_DRV
	select HPM_COMPONENTS_DMA_MANAGER
	select HPM_COMPONENTS_SPI

config HPM6750_SPI1
	bool "SPI1"
	default n
	select HPM_SPI_DRV
	
config HPM6750_SPI1_DMA
	bool "SPI1_DMA"
	default n
	select ARCH_DMA
	select HPM_DMA_DRV
	select HPM_COMPONENTS_DMA_MANAGER
	select HPM_COMPONENTS_SPI

config HPM6750_SPI2
	bool "SPI2"
	default n
	select HPM_SPI_DRV
	
config HPM6750_SPI2_DMA
	bool "SPI2_DMA"
	default n
	select ARCH_DMA
	select HPM_DMA_DRV
	select HPM_COMPONENTS_DMA_MANAGER
	select HPM_COMPONENTS_SPI

config HPM6750_SPI3
	bool "SPI3"
	default n
	select HPM_SPI_DRV
	
config HPM6750_SPI3_DMA
	bool "SPI3_DMA"
	default n
	select ARCH_DMA
	select HPM_DMA_DRV
	select HPM_COMPONENTS_DMA_MANAGER
	select HPM_COMPONENTS_SPI
config HPM_CAN_DRV
	bool
	default n

config HPM_CAN
	bool 
	select HPM_CAN_DRV
	default n

config HPM6750_CAN0
	bool "CAN0"
	select HPM_CAN
	default n
	
menu "CAN0 device driver options"
	depends on HPM6750_CAN0

comment "CAN MODE:0 means can_mode_normal"
comment "CAN MODE:1 means can_mode_loopback_internal"
comment "CAN MODE:2 means can_mode_loopback_external"
comment "CAN MODE:3 means can_mode_listen_only"
config HPM6750_CAN0_MODE
	int "CAN0_MODE"
	range 0 3
	default 0
	---help---
		0 means can_mode_normal
		1 means can_mode_loopback_internal
		2 means can_mode_loopback_external
		3 means can_mode_listen_only

config HPM6750_CAN0_FD_ISO_MODE
	bool "CAN0_FD_ISO_MODE"
	default y

config HPM6750_CAN0_USER_SET_TINING
	bool "CAN0_USER_SET_TINING"
	default n
 
config HPM6750_CAN0_NUM_SEG1
	depends on HPM6750_CAN0_USER_SET_TINING
	int "CAN0_NUM_SEG1"
	default 60

config CONFIG_HPM6750_CAN0_NUM_SEG2
	depends on HPM6750_CAN0_USER_SET_TINING
	int "CAN0_NUM_SEG2"
	default 20

config HPM6750_CAN0_NUM_SJW
	depends on HPM6750_CAN0_USER_SET_TINING
	int "CAN0_NUM_SJW"
	default 16

config CONFIG_HPM6750_CAN0_PRESCALER
	depends on HPM6750_CAN0_USER_SET_TINING
	int "CAN0_PRESCALER"
	default 2

config HPM6750_CAN0_FD_NUM_SEG1
	depends on (HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_NUM_SEG1"
	default 12

config HPM6750_CAN0_FD_NUM_SEG2
	depends on (HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_NUM_SEG2"
	default 4

config HPM6750_CAN0_FD_NUM_SJW
	depends on (HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_NUM_SJW"
	default 4

config CONFIG_HPM6750_CAN0_FD_PRESCALER
	depends on (HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_PRESCALER"
	default 1

config HPM6750_CAN0_BAUDRATE
	depends on !HPM6750_CAN0_USER_SET_TINING
	int "CAN0_BAUDRATE"
	default 500000
	range 0 1000000

config HPM6750_CAN0_MIN_SAMPLEPOINT
	depends on !HPM6750_CAN0_USER_SET_TINING
	int "CAN0_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN0_MAX_SAMPLEPOINT
	depends on !HPM6750_CAN0_USER_SET_TINING
	int "CAN0_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

config HPM6750_CAN0_FD_BAUDRATE
	depends on (!HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_BAUDRATE"
	default 5000000
	range 0 8000000

config HPM6750_CAN0_FD_MIN_SAMPLEPOINT
	depends on (!HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN0_FD_MAX_SAMPLEPOINT
	depends on (!HPM6750_CAN0_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN0_FD_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

endmenu # CAN0 device driver options

config HPM6750_CAN1
	bool "CAN1"
	select HPM_CAN
	default n

menu "CAN1 device driver options"
	depends on HPM6750_CAN1

comment "CAN MODE:0 means can_mode_normal"
comment "CAN MODE:1 means can_mode_loopback_internal"
comment "CAN MODE:2 means can_mode_loopback_external"
comment "CAN MODE:3 means can_mode_listen_only"
config HPM6750_CAN1_MODE
	int "CAN1_MODE"
	range 0 3
	default 0
	---help---
		0 means can_mode_normal
		1 means can_mode_loopback_internal
		2 means can_mode_loopback_external
		3 means can_mode_listen_only

config HPM6750_CAN1_FD_ISO_MODE
	bool "CAN1_FD_ISO_MODE"
	default y

config HPM6750_CAN1_USER_SET_TINING
	bool "CAN1_USER_SET_TINING"
	default n
 
config HPM6750_CAN1_NUM_SEG1
	depends on HPM6750_CAN1_USER_SET_TINING
	int "CAN1_NUM_SEG1"
	default 60

config CONFIG_HPM6750_CAN1_NUM_SEG2
	depends on HPM6750_CAN1_USER_SET_TINING
	int "CAN1_NUM_SEG2"
	default 20

config HPM6750_CAN1_NUM_SJW
	depends on HPM6750_CAN1_USER_SET_TINING
	int "CAN1_NUM_SJW"
	default 16

config CONFIG_HPM6750_CAN1_PRESCALER
	depends on HPM6750_CAN1_USER_SET_TINING
	int "CAN1_PRESCALER"
	default 2

config HPM6750_CAN1_FD_NUM_SEG1
	depends on (HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_NUM_SEG1"
	default 12

config HPM6750_CAN1_FD_NUM_SEG2
	depends on (HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_NUM_SEG2"
	default 4

config HPM6750_CAN1_FD_NUM_SJW
	depends on (HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_NUM_SJW"
	default 4

config CONFIG_HPM6750_CAN1_FD_PRESCALER
	depends on (HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_PRESCALER"
	default 1

config HPM6750_CAN1_BAUDRATE
	depends on !HPM6750_CAN1_USER_SET_TINING
	int "CAN1_BAUDRATE"
	default 500000
	range 0 1000000

config HPM6750_CAN1_MIN_SAMPLEPOINT
	depends on !HPM6750_CAN1_USER_SET_TINING
	int "CAN1_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN1_MAX_SAMPLEPOINT
	depends on !HPM6750_CAN1_USER_SET_TINING
	int "CAN1_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

config HPM6750_CAN1_FD_BAUDRATE
	depends on (!HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_BAUDRATE"
	default 5000000
	range 0 8000000

config HPM6750_CAN1_FD_MIN_SAMPLEPOINT
	depends on (!HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN1_FD_MAX_SAMPLEPOINT
	depends on (!HPM6750_CAN1_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN1_FD_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

endmenu # CAN1 device driver options

config HPM6750_CAN2
	bool "CAN2"
	select HPM_CAN
	default n

menu "CAN2 device driver options"
	depends on HPM6750_CAN2

comment "CAN MODE:0 means can_mode_normal"
comment "CAN MODE:1 means can_mode_loopback_internal"
comment "CAN MODE:2 means can_mode_loopback_external"
comment "CAN MODE:3 means can_mode_listen_only"
config HPM6750_CAN2_MODE
	int "CAN2_MODE"
	range 0 3
	default 0
	---help---
		0 means can_mode_normal
		1 means can_mode_loopback_internal
		2 means can_mode_loopback_external
		3 means can_mode_listen_only

config HPM6750_CAN2_FD_ISO_MODE
	bool "CAN2_FD_ISO_MODE"
	default y

config HPM6750_CAN2_USER_SET_TINING
	bool "CAN2_USER_SET_TINING"
	default n
 
config HPM6750_CAN2_NUM_SEG1
	depends on HPM6750_CAN2_USER_SET_TINING
	int "CAN2_NUM_SEG1"
	default 60

config CONFIG_HPM6750_CAN2_NUM_SEG2
	depends on HPM6750_CAN2_USER_SET_TINING
	int "CAN2_NUM_SEG2"
	default 20

config HPM6750_CAN2_NUM_SJW
	depends on HPM6750_CAN2_USER_SET_TINING
	int "CAN2_NUM_SJW"
	default 16

config CONFIG_HPM6750_CAN2_PRESCALER
	depends on HPM6750_CAN2_USER_SET_TINING
	int "CAN2_PRESCALER"
	default 2

config HPM6750_CAN2_FD_NUM_SEG1
	depends on (HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_NUM_SEG1"
	default 12

config HPM6750_CAN2_FD_NUM_SEG2
	depends on (HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_NUM_SEG2"
	default 4

config HPM6750_CAN2_FD_NUM_SJW
	depends on (HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_NUM_SJW"
	default 4

config CONFIG_HPM6750_CAN2_FD_PRESCALER
	depends on (HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_PRESCALER"
	default 1

config HPM6750_CAN2_BAUDRATE
	depends on !HPM6750_CAN2_USER_SET_TINING
	int "CAN2_BAUDRATE"
	default 500000
	range 0 1000000

config HPM6750_CAN2_MIN_SAMPLEPOINT
	depends on !HPM6750_CAN2_USER_SET_TINING
	int "CAN2_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN2_MAX_SAMPLEPOINT
	depends on !HPM6750_CAN2_USER_SET_TINING
	int "CAN2_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

config HPM6750_CAN2_FD_BAUDRATE
	depends on (!HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_BAUDRATE"
	default 5000000
	range 0 8000000

config HPM6750_CAN2_FD_MIN_SAMPLEPOINT
	depends on (!HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN2_FD_MAX_SAMPLEPOINT
	depends on (!HPM6750_CAN2_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN2_FD_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

endmenu # CAN2 device driver options

config HPM6750_CAN3
	bool "CAN3"
	select HPM_CAN
	default n

menu "CAN3 device driver options"
	depends on HPM6750_CAN3

comment "CAN MODE:0 means can_mode_normal"
comment "CAN MODE:1 means can_mode_loopback_internal"
comment "CAN MODE:2 means can_mode_loopback_external"
comment "CAN MODE:3 means can_mode_listen_only"
config HPM6750_CAN3_MODE
	int "CAN3_MODE"
	range 0 3
	default 0
	---help---
		0 means can_mode_normal
		1 means can_mode_loopback_internal
		2 means can_mode_loopback_external
		3 means can_mode_listen_only

config HPM6750_CAN3_FD_ISO_MODE
	bool "CAN3_FD_ISO_MODE"
	default y

config HPM6750_CAN3_USER_SET_TINING
	bool "CAN3_USER_SET_TINING"
	default n
 
config HPM6750_CAN3_NUM_SEG1
	depends on HPM6750_CAN3_USER_SET_TINING
	int "CAN3_NUM_SEG1"
	default 60

config CONFIG_HPM6750_CAN3_NUM_SEG2
	depends on HPM6750_CAN3_USER_SET_TINING
	int "CAN3_NUM_SEG2"
	default 20

config HPM6750_CAN3_NUM_SJW
	depends on HPM6750_CAN3_USER_SET_TINING
	int "CAN3_NUM_SJW"
	default 16

config CONFIG_HPM6750_CAN3_PRESCALER
	depends on HPM6750_CAN3_USER_SET_TINING
	int "CAN3_PRESCALER"
	default 2

config HPM6750_CAN3_FD_NUM_SEG1
	depends on (HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_NUM_SEG1"
	default 12

config HPM6750_CAN3_FD_NUM_SEG2
	depends on (HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_NUM_SEG2"
	default 4

config HPM6750_CAN3_FD_NUM_SJW
	depends on (HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_NUM_SJW"
	default 4

config CONFIG_HPM6750_CAN3_FD_PRESCALER
	depends on (HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_PRESCALER"
	default 1

config HPM6750_CAN3_BAUDRATE
	depends on !HPM6750_CAN3_USER_SET_TINING
	int "CAN3_BAUDRATE"
	default 500000
	range 0 1000000

config HPM6750_CAN3_MIN_SAMPLEPOINT
	depends on !HPM6750_CAN3_USER_SET_TINING
	int "CAN3_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN3_MAX_SAMPLEPOINT
	depends on !HPM6750_CAN3_USER_SET_TINING
	int "CAN3_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

config HPM6750_CAN3_FD_BAUDRATE
	depends on (!HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_BAUDRATE"
	default 5000000
	range 0 8000000

config HPM6750_CAN3_FD_MIN_SAMPLEPOINT
	depends on (!HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_MIN_SAMPLEPOINT"
	default 750
	range 0 65535

config HPM6750_CAN3_FD_MAX_SAMPLEPOINT
	depends on (!HPM6750_CAN3_USER_SET_TINING) && (CAN_FD || NET_CAN_HAVE_CANFD)
	int "CAN3_FD_MAX_SAMPLEPOINT"
	default 875
	range 0 65535

endmenu # CAN3 device driver options

menu "CAN driver configuration"
	depends on HPM_CAN

choice
	prompt "CAN character driver or SocketCAN support"
	default HPM_CAN_CHARDRIVER

config HPM_CAN_CHARDRIVER
	bool "HPM CAN character driver support"
	select ARCH_HAVE_CAN_ERRORS
	select CAN

config CAN_FD
	bool "CANFD haracter driver support"
	depends on HPM_CAN_CHARDRIVER
	default n

config HPM_CAN_SOCKET
	bool "HPM_CAN SocketCAN support"
	select NET_CAN_HAVE_ERRORS
	select NET_CAN_HAVE_CANFD

endchoice # CAN character driver or SocketCAN support

endmenu # CAN driver configuration

config HPM_RNG_DRV
	bool
	default n

config HPM6750_RNG
	bool "RNG"
	select HPM_RNG_DRV
	select ARCH_HAVE_RNG
	default n

config HPM_RTC_DRV
	bool
	default n

config HPM6750_RTC
	bool "RTC"
	default n
	select HPM_RTC_DRV

config HPM_GPTMR_DRV
	bool
	default n

config HPM6750_TIMER0
	bool "TIMER0"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER1
	bool "TIMER1"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER2
	bool "TIMER2"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER3
	bool "TIMER3"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER4
	bool "TIMER4"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER5
	bool "TIMER5"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER6
	bool "TIMER6"
	default n
	select HPM_GPTMR_DRV

config HPM6750_TIMER7
	bool "TIMER7"
	default n
	select HPM_GPTMR_DRV

	
config HPM_ADC12_DRV
    bool
    default n 

config HPM_ADC16_DRV
    bool
    default n 

config HPM_ADC0
    bool "ADC0"		
    default n	
    select HPM_ADC12_DRV	

    menu "ADC0 device driver options"
        depends on HPM_ADC0

        # Channel Value Setting
        config HPM_ADC0_CH
        int 
        default 7
        depends on HPM6750EVK_ADC0_CH7

        config HPM_ADC0_CH
        int 
        default 10
        depends on HPM6750EVK_ADC0_CH10

        config HPM_ADC0_CH
        int 
        default 11
        depends on HPM6750EVK_ADC0_CH11
        # End Of Channel Value Setting

        # Channel Setting
        choice 
            prompt "ADC0 Channel"
            default HPM6750EVK_ADC0_CH11

            config HPM6750EVK_ADC0_CH7
            bool "CH7"

            config HPM6750EVK_ADC0_CH10
            bool "CH10"

            config HPM6750EVK_ADC0_CH11
            bool "CH11"
        endchoice
        # End Of Chanenl Setting 

        # Conversion Mode Setting
        config HPM_ADC0_CONV_MODE
        int "ADC0 Conversion Mode"
        range 0 3
        default 0
        comment "0: oneshot mode"
        comment "1: period mode"
        comment "2: sequence mode"
        comment "3: preemption mode"
        # End Of Conversion Mode Setting        
       
        # Blocking Read Setting
        if HPM_ADC0_CONV_MODE=0
            config HPM_ADC0_NON_BLOCKING_READ
            bool "ADC0 Non-Blocking Read "
            default y
        endif
        # End Of Blocking Read Setting

        # Trigger Source Setting      
        config HPM6750_ADC0_TRIG_SOURCE
        int "ADC0 Trigger Source"
        range 0 11
        default 0
        comment "0:  TRG0A"
        comment "1:  TRG0B"
        comment "2:  TRG0C"
        comment "3:  TRG1A"
        comment "4:  TRG1B"
        comment "5:  TRG1C"
        comment "6:  TRG2A"
        comment "7:  TRG2B"
        comment "8:  TRG2C"
        comment "9:  TRG3A"
        comment "10: TRG3B"
        comment "11: TRG3C"         
        # End Of Trigger Source Setting

        # Resolution Setting
        config HPM_ADC0_RES
        int "ADC0 Resolution"
        range 0 3
        default 3   
        comment "0: 6-bit resolution"
        comment "1: 8-bit resolution"
        comment "2: 10-bit resolution"
        comment "3: 12-bit resolution"
        # Endi Of Resolution Setting

        # Signal Type Setting
        config HPM_ADC0_DIFF_SEL
        int "ADC0 Signal Type"
        range 0 1
        default 0   
        comment "0: signal-ended signal"
        comment "1: differential signal"     
        # Endi Of Signal Type Setting
    endmenu # ADC0 device driver options

config HPM_ADC1
    bool  "ADC1"		
    default n 
    select HPM_ADC12_DRV

    menu "ADC1 device driver options"
        depends on HPM_ADC1

         # Channel Value Setting
        config HPM_ADC1_CH
        int 
        default 7
        depends on HPM6750EVK_ADC1_CH7

        config HPM_ADC1_CH
        int 
        default 10
        depends on HPM6750EVK_ADC1_CH10

        config HPM_ADC1_CH
        int 
        default 11
        depends on HPM6750EVK_ADC1_CH11
        # End Of Channel Value Setting

        # Channel Setting
        choice 
            prompt "ADC1 Channel"
            default HPM6750EVK_ADC1_CH11

            config HPM6750EVK_ADC1_CH7
            bool "CH7"

            config HPM6750EVK_ADC1_CH10
            bool "CH10"

            config HPM6750EVK_ADC1_CH11
            bool "CH11"
        endchoice
        # End Of Chanenl Setting 

        # Conversion Mode Setting
        config HPM_ADC1_CONV_MODE
        int "ADC1 Conversion Mode"
        range 0 3
        default 0
        comment "0: oneshot mode"
        comment "1: period mode"
        comment "2: sequence mode"
        comment "3: preemption mode"
        # End Of Conversion Mode Setting
        
        # Blocking Read Setting
        if HPM_ADC1_CONV_MODE=0
            config HPM_ADC1_NON_BLOCKING_READ
            bool "ADC1 Non-Blocking Read "
            default y
        endif
        # End Of Blocking Read Setting

        # Trigger Source Setting      
        config HPM6750_ADC1_TRIG_SOURCE
        int "ADC1 Trigger Source"
        range 0 11
        default 0
        comment "0:  TRG0A"
        comment "1:  TRG0B"
        comment "2:  TRG0C"
        comment "3:  TRG1A"
        comment "4:  TRG1B"
        comment "5:  TRG1C"
        comment "6:  TRG2A"
        comment "7:  TRG2B"
        comment "8:  TRG2C"
        comment "9:  TRG3A"
        comment "10: TRG3B"
        comment "11: TRG3C"         
        # End Of Trigger Source Setting

        # Resolution Setting
        config HPM_ADC1_RES
        int "ADC1 Resolution"
        range 0 3
        default 3   
        comment "0: 6-bit resolution"
        comment "1: 8-bit resolution"
        comment "2: 10-bit resolution"
        comment "3: 12-bit resolution"
        # Endi Of Resolution Setting

        # Signal Type Setting
        config HPM_ADC1_DIFF_SEL
        int "ADC1 Signal Type"
        range 0 1
        default 0   
        comment "0: signal-ended signal"
        comment "1: differential signal"     
        # Endi Of Signal Type Setting
    endmenu # ADC1 device driver options

config HPM_ADC2
    bool "ADC2"		
    default n 
    select HPM_ADC12_DRV

    menu "ADC2 device driver options"
        depends on HPM_ADC2

        # Channel Value Setting
        config HPM_ADC2_CH
        int 
        default 7
        depends on HPM6750EVK_ADC2_CH7

        config HPM_ADC2_CH
        int 
        default 10
        depends on HPM6750EVK_ADC2_CH10

        config HPM_ADC2_CH
        int 
        default 11
        depends on HPM6750EVK_ADC2_CH11
        # End Of Channel Value Setting

        # Channel Setting
        choice 
            prompt "ADC2 Channel"
            default HPM6750EVK_ADC2_CH11

            config HPM6750EVK_ADC2_CH7
            bool "CH7"

            config HPM6750EVK_ADC2_CH10
            bool "CH10"

            config HPM6750EVK_ADC2_CH11
            bool "CH11"
        endchoice
        # End Of Chanenl Setting 

        # Conversion Mode Setting
        config HPM_ADC2_CONV_MODE
        int "ADC2 Conversion Mode"
        range 0 3
        default 0
        comment "0: oneshot mode"
        comment "1: period mode"
        comment "2: sequence mode"
        comment "3: preemption mode"
        # End Of Conversion Mode Setting
        
        # Blocking Read Setting
        if HPM_ADC2_CONV_MODE=0
            config HPM_ADC2_NON_BLOCKING_READ
            bool "ADC2 Non-Blocking Read "
            default y
        endif
        # End Of Blocking Read Setting

        # Trigger Source Setting      
        config HPM6750_ADC2_TRIG_SOURCE
        int "ADC2 Trigger Source"
        range 0 11
        default 0
        comment "0:  TRG0A"
        comment "1:  TRG0B"
        comment "2:  TRG0C"
        comment "3:  TRG1A"
        comment "4:  TRG1B"
        comment "5:  TRG1C"
        comment "6:  TRG2A"
        comment "7:  TRG2B"
        comment "8:  TRG2C"
        comment "9:  TRG3A"
        comment "10: TRG3B"
        comment "11: TRG3C"         
        # End Of Trigger Source Setting

        # Resolution Setting
        config HPM_ADC2_RES
        int "ADC2 Resolution"
        range 0 3
        default 3   
        comment "0: 6-bit resolution"
        comment "1: 8-bit resolution"
        comment "2: 10-bit resolution"
        comment "3: 12-bit resolution"
        # Endi Of Resolution Setting

        # Signal Type Setting
        config HPM_ADC2_DIFF_SEL
        int "ADC2 Signal Type"
        range 0 1
        default 0   
        comment "0: signal-ended signal"
        comment "1: differential signal"     
        # End Of Signal Type Setting
    endmenu # ADC2 device driver options

config HPM_ADC3
    bool "ADC3"		
    default n 
    select HPM_ADC16_DRV

    menu "ADC3 device driver options"
    depends on HPM_ADC3
        # Channel Setting
        config HPM_ADC3_CH
        int 
        default 2
        depends on HPM6750EVK_ADC3_CH2

        choice          
            prompt "ADC3 Channel"
            default HPM6750EVK_ADC3_CH2

            config HPM6750EVK_ADC3_CH2  
            bool "CH2"
        endchoice
        # End Of Chanenl Setting 

        # Conversion Mode Setting
        config HPM_ADC3_CONV_MODE
        int "ADC3 Conversion Mode"
        range 0 3
        default 0
        comment "0: oneshot mode"
        comment "1: period mode"
        comment "2: sequence mode"  
        comment "3: preemption mode"
        # End Of Conversion Mode Setting
         
        # Blocking Read Setting
        if HPM_ADC3_CONV_MODE=0
            config HPM_ADC3_NON_BLOCKING_READ
            bool "ADC3 Non-Blocking Read "
            default y
        endif
        # End Of Blocking Read Setting

        # Trigger Source Setting      
        config HPM6750_ADC3_TRIG_SOURCE
        int "ADC3 Trigger Source"
        range 0 11
        default 0
        comment "0:  TRG0A"
        comment "1:  TRG0B"
        comment "2:  TRG0C"
        comment "3:  TRG1A"
        comment "4:  TRG1B"
        comment "5:  TRG1C"
        comment "6:  TRG2A"
        comment "7:  TRG2B"
        comment "8:  TRG2C"
        comment "9:  TRG3A"
        comment "10: TRG3B"
        comment "11: TRG3C"         
        # End Of Trigger Source Setting

        # Resolution Value Setting            
        config HPM_ADC3_RES 
        int 
        default 9
        depends on ADC3_RES_8BIT
        	
        config HPM_ADC3_RES 
        int 
        default 11
        depends on ADC3_RES_10BIT

        config HPM_ADC3_RES 
        int 
        default 14
        depends on ADC3_RES_12BIT

        config HPM_ADC3_RES 
        int     
        default 21
        depends on ADC3_RES_16BIT
        # End Of Resolution Value Setting      

        # Resolution Setting      
        choice
            prompt "ADC3 Resolution"
            default ADC3_RES_16BIT

            config ADC3_RES_8BIT
            bool "8-bit resolution"

            config ADC3_RES_10BIT
            bool "10-bit resolution"

            config ADC3_RES_12BIT
            bool "12-bit resolution"

            config ADC3_RES_16BIT
            bool "16-bit resolution"
        endchoice
        # Endi Of Resolution Setting
    endmenu # ADC3 device driver options

config HPM_PWM_DRV
	bool
	default n

config HPM6750_PWM0
	bool "PWM0"
	default n
	select HPM_PWM_DRV

config HPM6750_PWM1
	bool "PWM1"
	default n
	select HPM_PWM_DRV

config HPM6750_PWM2
	bool "PWM2"
	default n
	select HPM_PWM_DRV

config HPM6750_PWM3
	bool "PWM3"
	default n
	select HPM_PWM_DRV

config HPM_PWM_MULTICHAN
	bool "PWM Multiple Output Channels"
	default n
	depends on HPM_PWM_DRV
	select ARCH_HAVE_PWM_MULTICHAN
	---help---
		Specifies that the PWM driver supports multiple output
		channels per timer.
		
endmenu

